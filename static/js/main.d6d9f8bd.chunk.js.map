{"version":3,"sources":["Components/ExpenseDetails.jsx","Components/ExpenseInput.jsx","App.js","reportWebVitals.js","Store/ExpenseStore.jsx","index.js"],"names":["ExpenseDetails","log","useSelector","state","className","map","el","ExpenseInput","inputRef","useRef","data","dispatch","useDispatch","type","ref","onClick","amount","parseInt","current","value","isNaN","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","currentdate","Date","toISOString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgBeA,MAdf,WACI,IAAMC,EAAMC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,OACvC,OACI,sBAAKG,UAAU,iBAAf,UACI,mBAAGA,UAAU,SAAb,2BACA,oBAAIA,UAAU,WAAd,SACCH,EAAII,KAAI,SAAAC,GACN,OAAO,6BAAcA,GAALA,YCqBhBC,MA5Bf,WACI,IAAMC,EAAWC,mBACXC,EAAOR,aAAY,SAAAC,GAAK,OAAIA,EAAMO,QAClCC,EAAWC,cAejB,OACI,sBAAKR,UAAU,eAAf,UACI,oBAAGA,UAAU,SAAb,uBAAiCM,KACjC,uBAAOG,KAAK,SAASC,IAAKN,IAAkB,uBAC5C,wBAAQO,QAlBE,WACd,IAAMC,EAAOC,SAAST,EAASU,QAAQC,OACnCC,MAAMJ,IAAoB,IAATA,GACjBL,EAAS,CAACE,KAAK,MAAMG,WAEzBR,EAASU,QAAQC,MAAM,IAanB,iBACA,wBAAQJ,QAZK,WACjB,IAAMC,EAAOC,SAAST,EAASU,QAAQC,OACnCC,MAAMJ,IAAoB,IAATA,GACjBL,EAAS,CAACE,KAAK,SAASG,WAE5BR,EAASU,QAAQC,MAAM,IAOnB,wB,MCPGE,MAdf,WACE,OACE,cAAC,WAAD,UACE,sBAAKjB,UAAU,cAAf,UACE,mBAAGA,UAAU,UAAb,qCAEA,cAAC,EAAD,IACA,cAAC,EAAD,UCCOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCLRQ,EAAa,CAACrB,KAAK,EAAET,IAAI,IAoBhB+B,EADDC,aAjBQ,WAA8B,IAA7B9B,EAA4B,uDAAtB4B,EAAaG,EAAS,uCAC3CC,GAAc,IAAIC,MAAOC,cAC7B,MAAiB,QAAdH,EAAOrB,KACA,CACFH,KAAKP,EAAMO,KAAKwB,EAAOlB,OACvBf,IAAI,GAAD,mBAAKE,EAAMF,KAAX,CAAekC,EAAY,MAAMD,EAAOlB,OAAO,YAGzC,WAAdkB,EAAOrB,KACA,CACFH,KAAKP,EAAMO,KAAKwB,EAAOlB,OACvBf,IAAI,GAAD,mBAAKE,EAAMF,KAAX,CAAekC,EAAY,MAAMD,EAAOlB,OAAO,eAGnDb,KCVXmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFS,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.d6d9f8bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useSelector } from 'react-redux'\r\nfunction ExpenseDetails() {\r\n    const log = useSelector(state => state.log)\r\n    return (\r\n        <div className=\"ExpenseDetails\">\r\n            <p className=\"header\">Transactions:</p>\r\n            <ul className=\"listItem\">\r\n            {log.map(el=>{\r\n               return <li key={el}>{el}</li>\r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDetails\r\n","import React,{useRef} from 'react'\r\nimport {useSelector , useDispatch} from 'react-redux'\r\nfunction ExpenseInput() {\r\n    const inputRef = useRef()\r\n    const data = useSelector(state => state.data)\r\n    const dispatch = useDispatch()\r\n    const addHandler =()=>{\r\n        const amount=parseInt(inputRef.current.value)\r\n        if(!isNaN(amount) && amount!==0){\r\n            dispatch({type:'Add',amount})\r\n        }\r\n        inputRef.current.value=''\r\n    }\r\n    const removeHandler =()=>{\r\n        const amount=parseInt(inputRef.current.value)\r\n        if(!isNaN(amount) && amount!==0){\r\n            dispatch({type:'Remove',amount})\r\n        }\r\n        inputRef.current.value=''\r\n    }\r\n    return (\r\n        <div className=\"ExpenseInput\">\r\n            <p className=\"header\">Balance : {data}</p>\r\n            <input type=\"number\" ref={inputRef}></input><br></br>\r\n            <button onClick={addHandler}>Add</button>\r\n            <button onClick={removeHandler}>Remove</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseInput\r\n","import React, { Fragment } from 'react';\nimport ExpenseDetails from './Components/ExpenseDetails'\nimport ExpenseInput from './Components/ExpenseInput'\nimport './App.css';\nfunction App() {\n  return (\n    <Fragment>\n      <div className=\"Expensebody\">      \n        <p className=\"heading\">Expense Tracker - Basic</p>\n        \n        <ExpenseInput/>\n        <ExpenseDetails/>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore} from 'redux'\r\n\r\nconst initialState={data:0,log:[]}\r\n\r\nconst budgetReducer = (state=initialState,action)=>{\r\n    var currentdate = new Date().toISOString();\r\n    if(action.type==='Add'){\r\n        return{\r\n            data:state.data+action.amount,\r\n            log:[...state.log,currentdate+' - '+action.amount+' - Add']\r\n        }\r\n    }\r\n    if(action.type==='Remove'){\r\n        return{\r\n            data:state.data-action.amount,\r\n            log:[...state.log,currentdate+' - '+action.amount+' - Remove']\r\n        }\r\n    }\r\n    return state\r\n\r\n}\r\nconst store = createStore(budgetReducer)\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './Store/ExpenseStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}